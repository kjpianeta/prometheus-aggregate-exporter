#!/bin/sh
### BEGIN INIT INFO
# Provides:          Prometheus aggregagte exporter
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Aggregagte exporter for prometheus written in Go
### END INIT INFO

. /etc/init.d/functions


RETVAL=0
PROG="prometheus-aggregate-exporter"
DAEMON=/usr/bin/${PROG}
DAEMON_SYSCONFIG=/etc/sysconfig/prometheus/${PROG}.env
DAEMON_CONFIG_FILE=/etc/sysconfig/prometheus/${PROG}-config.yml
PID_FILE=/var/run/prometheus/${PROG}.pid
LOG_FILE=/var/log/prometheus/${PROG}.log
LOCK_FILE=/var/lock/subsys/${PROG}
DAEMON_USER=${PROG}

FQDN=$(hostname --long)

if [ -f $DAEMON_SYSCONFIG ] ; then
    . ${DAEMON_SYSCONFIG}
fi

ARGS="-config ${DAEMON_CONFIG_FILE}"
[ -z "$EXPORTER_ARGS" ] || ARGS="$EXPORTER_ARGS"

do_start_prepare()
{
    umask 077
    mkdir -p `dirname $PID_FILE` || true
    mkdir -p `dirname $LOG_FILE` || true
    chown -R $DAEMON_USER: `dirname $LOG_FILE`
    chown -R $DAEMON_USER: `dirname $PID_FILE`
}
start() {
    if check_status > /dev/null; then
        echo "Prometheus ${PROG} daemon already running!!!"
        exit 0
    fi
    do_start_prepare
    echo -n $"Starting Prometheus ${PROG} daemon: "
    daemon --pidfile=${PID_FILE} --user=${DAEMON_USER} " { ${DAEMON} ${ARGS} &>> ${LOG_FILE} & } ; echo \$! >| ${PID_FILE} "
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && touch ${LOCK_FILE}
    return $RETVAL
}

stop() {
    echo -n $"Stopping Prometheus ${PROG} daemon: "
    killproc -p ${PID_FILE} -d 10 ${DAEMON}
    RETVAL=$?
    echo
    [ $RETVAL = 0 ] && rm -f ${LOCK_FILE} ${PID_FILE}
    return $RETVAL
}

check_status() {
    status -p ${PID_FILE} -l ${PROG} ${DAEMON}
    RETVAL=$?
    return $RETVAL
}

case "$1" in
    start)
        start
    ;;
    stop)
        stop
    ;;
    status)
        check_status
    ;;
    reload|force-reload)
        reload
    ;;
    restart)
        stop
        start
    ;;
    *)
        N=/etc/init.d/${NAME}
        echo "Usage: $N {start|stop|status|restart|force-reload}" >&2
        RETVAL=2
    ;;
esac

exit ${RETVAL}
